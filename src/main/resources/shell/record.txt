
--------------------------------------------------------------------------------------------
#!/bin/bash 和  #! /bin/sh  区别
/bin/sh 相当于 /bin/bash --posix 
sh跟bash的区别，实际上就是bash有没有开启posix模式的区别
在一般的linux系统当中（如redhat），使用sh调用执行脚本相当于打开了bash的POSIX标准模式
--------------------------------------------------------------------------------------------
$# 表示提供到shell脚本或者函数的参数总数
$@ 表示所有参数
$1 表示第一个参数。
$? 上条命令的退出码：0为命令正常执行，1-255为有出错。

整数比较
-eq     等于,如:if ["$a" -eq "$b" ]
-ne     不等于,如:if ["$a" -ne "$b" ]
-gt     大于,如:if ["$a" -gt "$b" ]
-ge    大于等于,如:if ["$a" -ge "$b" ]
-lt      小于,如:if ["$a" -lt "$b" ]
-le      小于等于,如:if ["$a" -le "$b" ]
<  小于(需要双括号),如:(("$a" < "$b"))
<=  小于等于(需要双括号),如:(("$a" <= "$b"))
>  大于(需要双括号),如:(("$a" > "$b"))
>=  大于等于(需要双括号),如:(("$a" >= "$b"))
--------------------------------------------------------------------------------------------
清空文件的内容
: > /var/log/messages    不会产生新的进程。（因为:是内建的）
cat /dev/null > /var/log/messages

重定向(默认1)
0标准输入
标准输出1>
错误输出2>
错误的正确的都输出到空设备：cat $filename 2>/dev/null >/dev/null

/dev/zero主要的用处是用来创建一个指定长度用于初始化的空文件，像临时交换文件。

nohup command>/dev/null 2>&1 &
nohup：表示当前用户和系统的会话下的进程忽略响应HUP消息。
&：后台运行
>/dev/null 输出到空设备
2>&1 错误输出到标准输出里面     &指示不要把1当作普通文件，而是fd=1即标准输出来处理
从左往右看，标准输出到/dev/null 同时左边的主体，错误输出输出到标准输出





